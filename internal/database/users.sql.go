// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: users.sql

package database

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :one
insert into Users (id , user_name , email , created_at , last_login)
values ( gen_random_uuid(), $1 , $2 , NOW() , NOW() )
    returning id, user_name, email, created_at, last_login
`

type CreateUserParams struct {
	UserName sql.NullString `json:"user_name"`
	Email    sql.NullString `json:"email"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser, arg.UserName, arg.Email)
	var i User
	err := row.Scan(
		&i.ID,
		&i.UserName,
		&i.Email,
		&i.CreatedAt,
		&i.LastLogin,
	)
	return i, err
}
