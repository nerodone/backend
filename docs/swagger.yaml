definitions:
  auth.UserRefreshRequest:
    properties:
      refresh_token:
        type: string
      session_id:
        type: string
    type: object
  auth.UserRefreshResponse:
    properties:
      access_token:
        type: string
    type: object
  auth.UserSignupRequest:
    properties:
      email:
        example: user@test.com
        type: string
      password:
        example: StrongSecretPassword
        type: string
      platform:
        enum:
        - web
        - cli
        - desktop
        - neovim
        - vscode
        type: string
      user_name:
        example: username
        type: string
    type: object
  auth.UserSignupResponse:
    properties:
      access_token:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        example: f5b1c9e2-1b2c-4b5c-8f1d-8f5b1c9e2f1d
        type: string
      last_login:
        type: string
      refresh_token:
        type: string
      session_id:
        type: string
      user_name:
        type: string
    type: object
  auth.loginReq:
    properties:
      email:
        type: string
      password:
        type: string
      platform:
        enum:
        - web
        - cli
        - desktop
        - neovim
        - vscode
        type: string
    type: object
  auth.loginRes:
    properties:
      access_token:
        example: token
        type: string
      created_at:
        type: string
      email:
        example: user@test.com
        type: string
      id:
        example: 61fe5f30-2dfa-4991-97e0-f491027bbc41
        type: string
      last_login:
        type: string
      platform:
        enum:
        - web
        - cli
        - desktop
        - neovim
        - vscode
        type: string
      refresh_token:
        example: token
        type: string
      session_id:
        example: 5d60d0ea-afe4-44d2-8455-cdc624becf07
        type: string
      user_name:
        example: myUserName
        type: string
    type: object
  auth.logoutReq:
    properties:
      session_id:
        example: f5b1c9e2-1b2c-4b5c-8f1d-8f5b1c9e2f1d
        type: string
    type: object
  workspaces.createWorkspaceReq:
    properties:
      description:
        type: string
      workspace_name:
        type: string
    type: object
  workspaces.updateWorkspaceReq:
    properties:
      description:
        type: string
      name:
        type: string
      workspace_id:
        type: string
    type: object
  workspaces.workspace:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      owner:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  title: NeroDone api
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.loginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.loginRes'
        "400":
          description: invalid request payload
        "401":
          description: "invalid email\"\t||\t\"invalid password"
        "500":
          description: Internal Server Error
      summary: Authenticate user and return access and refresh tokens
      tags:
      - auterrInvalidEmaierrInvalidEmaillh
  /auth/logout:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.logoutReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: invalid request payload
        "500":
          description: internal Server Error
      summary: 'delete session : revoke access token refresh token'
  /auth/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.UserRefreshRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/auth.UserRefreshResponse'
        "500":
          description: Internal Server Error
      summary: send refresh token to get  new access token
  /auth/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.UserSignupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/auth.UserSignupResponse'
        "400":
          description: Invalid request payload
        "409":
          description: "email\talerady\texists\"\t||\t\"username\talerady\texists"
        "500":
          description: Internal Server Error
      summary: create new account using password and email
  /workspaces:
    get:
      description: List all worksapces that the user is either the owner of or collaborates
        on
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/workspaces.workspace'
            type: array
        "400":
          description: invalid token
        "401":
          description: unauthorized access
        "500":
          description: internal Server Error
      summary: List all worksapces that the user is either the owner of or collaborates
        on
      tags:
      - workspaces
  /workspaces/:
    post:
      parameters:
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/workspaces.createWorkspaceReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/workspaces.workspace'
        "401":
          description: unauthorized access
        "500":
          description: internal Server Error
      summary: create a workspace , the user will be owner of the created workspace
      tags:
      - workspaces
  /workspaces/{workspace_id}:
    delete:
      responses:
        "200":
          description: OK
        "400":
          description: invalid workspace_id
        "401":
          description: unauthorized access
        "404":
          description: workspace not found
      summary: delete workspace
      tags:
      - workspaces
    get:
      description: List all worksapces that the user is either the owner of or collaborates
        on
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/workspaces.workspace'
        "401":
          description: unauthorized access
        "500":
          description: internal Server Error
      summary: List all worksapces that the user is either the owner of or collaborates
        on
      tags:
      - workspaces
    put:
      parameters:
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/workspaces.updateWorkspaceReq'
      responses:
        "204":
          description: No Content
        "400":
          description: invalid request payload||invalid workspace_id
        "401":
          description: unauthorized access
        "404":
          description: workspace not found
        "500":
          description: internal Server Error
      summary: update workspace metadata (name, description) , empty fields are not
        ignored !
      tags:
      - workspaces
swagger: "2.0"
