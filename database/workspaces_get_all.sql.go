// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: workspaces_get_all.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getAllWorkspaces = `-- name: GetAllWorkspaces :many
SELECT id, owner, name, description, created_at, updated_at
FROM workspaces w
WHERE w.owner = $1::uuid
OR EXISTS (
  SELECT 1
  FROM collaborate c
  WHERE c.user = $1::uuid
  AND c.workspace = w.id
)
`

// GetAllWorkspaces returns all workspaces that the user is the owner of or collaborates on.
func (q *Queries) GetAllWorkspaces(ctx context.Context, userID uuid.UUID) ([]Workspace, error) {
	rows, err := q.db.QueryContext(ctx, getAllWorkspaces, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Workspace
	for rows.Next() {
		var i Workspace
		if err := rows.Scan(
			&i.ID,
			&i.Owner,
			&i.Name,
			&i.Description,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
