// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: sessions.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const authenicateUser = `-- name: AuthenicateUser :one
SELECT EXISTS (
  SELECT 1
  FROM sessions 
  WHERE user_id = $1
  AND access_token = $2
)
`

type AuthenicateUserParams struct {
	UserID      uuid.UUID `json:"user_id"`
	AccessToken string    `json:"access_token"`
}

func (q *Queries) AuthenicateUser(ctx context.Context, arg AuthenicateUserParams) (bool, error) {
	row := q.db.QueryRowContext(ctx, authenicateUser, arg.UserID, arg.AccessToken)
	var exists bool
	err := row.Scan(&exists)
	return exists, err
}
