// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: sign_up_session.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createSessionWithPassword = `-- name: CreateSessionWithPassword :one
insert into Sessions (id , user_id , access_token , refresh_token , platform, created_at, last_login)
values ( gen_random_uuid(), $1 , $2 , $3 , $4 , NOW(), NOW())
returning id, user_id, access_token, refresh_token, platform, created_at, last_login
`

type CreateSessionWithPasswordParams struct {
	UserID       uuid.UUID `json:"user_id"`
	AccessToken  string    `json:"access_token"`
	RefreshToken string    `json:"refresh_token"`
	Platform     Eplatform `json:"platform"`
}

func (q *Queries) CreateSessionWithPassword(ctx context.Context, arg CreateSessionWithPasswordParams) (Session, error) {
	row := q.db.QueryRowContext(ctx, createSessionWithPassword,
		arg.UserID,
		arg.AccessToken,
		arg.RefreshToken,
		arg.Platform,
	)
	var i Session
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.AccessToken,
		&i.RefreshToken,
		&i.Platform,
		&i.CreatedAt,
		&i.LastLogin,
	)
	return i, err
}
