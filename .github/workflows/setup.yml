name: setup
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - '*'
jobs:
  setup:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup Go environment
        uses: actions/setup-go@v5.0.0
        with:
          go-version: '1.21'
      - name: Install dependencies
        run: go get .
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54
          install-mode: "binary"
      - name: Build
        run: go build -v ./...
      - name: Test with the Go CLI
        run: go test -v ./...
      - name: Test with Go
        run: go test -json > TestResults.json
      - name: Upload Go test results
        uses: actions/upload-artifact@v4
        with:
          name: Go-results
          path: TestResults.json
  sqlc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: sqlc-dev/setup-sqlc@v3
        with:
          sqlc-version: '1.26.0'
      - run: sqlc diff
  vet:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: "postgres:15"
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      PG_PORT: 5432
    steps:
      - uses: actions/checkout@v3
      - name: Create migration file
        run: bash createMigration.sh
      - uses: sqlc-dev/setup-sqlc@v3
        with:
          sqlc-version: '1.26.0'
          # Connect and migrate your database here. This is an example which runs
          # commands from a `schema.sql` file.
      - run: psql -h localhost -U postgres -p $PG_PORT -d postgres -f migration.sql
        env:
          PGPASSWORD: postgres
      - run: sqlc vet
